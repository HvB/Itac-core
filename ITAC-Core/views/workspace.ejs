<html>
  <head>
    <title><%= title %></title>

	<% include entete %>.

 	<link rel="stylesheet"  href="/stylesheets/styleClientCollab.css" />

 	<script type="text/javascript">
 		var urldemande = '<%= urldemande %>';
 		var zpdemande = '<%= myZP %>';
 		var rang= '<%= rangZP %>';

 		// on d�clare l'objet myZC qui va �tre la zone collaborative
 		var myZC = {};
 		var ZEmax= '<%= NbZEMax %>';
 		
 	// tableau qui va permettre de positionner correctement les zones d'�change (position, taille, orientation)
 		var paramAffichageZE = [];
 		var orientationZE = [];


 	</script>
 	
    <script language="JavaScript" type="text/javascript" src="/socket.io-client/socket.io.js"></script>
    <script language="JavaScript" type="text/javascript" src="/javascripts/interact.js"></script>
    
    <script language="JavaScript" type="text/javascript" src="/javascripts/menuITAC.js"></script>
    <script language="JavaScript" type="text/javascript" src="/javascripts/interactITAC.js"></script>
    <script language="JavaScript" type="text/javascript" src="/javascripts/artefactsITAC.js"></script>
		
  </head>

  <!-- le corps est la ZP et ne contient que le menu -->
  <body id="ZP">
  
 	 <div id="menu" class="menu hand"></div>
 
  </body > 
  

  
<script type="text/javascript">

// Attente fin de chargement
if(jQuery.ui){
	//alert(" jQuery.ui loaded")
}
else {
	alert(" jQuery.ui non chargee")
}


  

		
// *********************** Partie connexion *****************************		
		console.log('PAGE : workspace.ejs -> demande connexion socket sur : '+ urldemande);
		
		var socket = io.connect(urldemande, {transports:['websocket']});
   		console.log('PAGE : workspace.js -> connexion socket [OK] ');
   
   		/* ------------------------------------------------*/
		/* --- premiere connexion ZA (Zone d'Activit� = Serveur ?)---*/
		/* ------------------------------------------------*/
    	
    	socket.emit('EVT_DemandeConnexionZA', urldemande, zpdemande);
    	console.log('PAGE : workspace.ejs -> emission evenement EVT_DemandeConnexionZA pour ZP= '+zpdemande);
    			
		socket.on('EVT_ReponseOKConnexionZA',function(ZC) {
	  	
			// on r�cup�re tout le param�trage de la Zone Collaborative

			myZC = ZC;
			
			console.log('PAGE : workspace.ejs ->ZC ='+JSON.stringify(myZC));
		
			
			console.log('PAGE : workspace.ejs -> menu ITAC initiale : '+ menuITAC );
			
			console.log('PAGE : workspace.ejs -> ajout des ZP , total ='+ myZC.nbZP) ;
			
			for(var i=0; i<myZC.nbZP; i++) { 
				if (i != rang) {
					console.log('PAGE : workspace.ejs -> menu ITAC , push = '+myZC.ZP[i].idZP+" ZP" );
					menuITAC.push("ZP" );
					//classmenuITAC.push("menu ZP"+i);
					contenuMenu.push(myZC.ZP[i].idZP);
				}
				
			}
			console.log('PAGE : workspace.ejs -> menu ITAC en cours : '+ menuITAC);

			
			// [TC] Pourquoi les logs suivants sont faits avec le param�tre formel ZC et non myZC?  >corrig�
    		alert('Zone collaborative active : '+ myZC.idZC+'\n\nBienvenue sur l\'Espace de Partage :'+myZC.ZP[rang].idZP+'\n\n');
    		console.log('PAGE : workspace.ejs -> reception evenement [EVT_ReponseOKConnexionZA] pour ZP= '+myZC.ZP[rang].idZP);
    		
    		// l�-dessous on a typeZP qui n'apparait pas
    		console.log('PAGE : workspace.ejs -> param�tre de ZP = '+JSON.stringify(myZC.ZP[rang]));
    	
    		// on lance le calcul des param�tres d'affichage
    		Calcule_Nb_ZE(ZEmax);
    		console.log('PAGE : workspace.ejs -> calcul taille ZE , NB_ZE_Largeur = '+NB_ZE_Largeur+' NB_ZE_Hauteur = '+NB_ZE_Hauteur);
    		console.log('PAGE : workspace.ejs -> calcul taille ZE , TailleZEenlargeur = '+TailleZEenlargeur+ ' TailleZEenhauteur = '+TailleZEenhauteur);
    		
    		// on cree les DIV pour les ER  [TC]  Les ZE non???
    		$( document ).ready(function() {
				for(var i=1; i<=ZEmax; i++) 
				{
				    var codeZE='ZE'+i;
 					paramAffichageZE[codeZE] = new Array(0,0,0,0,0);
 					orientationZE[codeZE]= new Array('');
 					
 					if (i <= NB_ZE_Largeur) {
	 					paramAffichageZE[codeZE][0]=TailleZEenlargeur; // largeur
	 					paramAffichageZE[codeZE][1]=40;				 // hauteur
	 					paramAffichageZE[codeZE][2]=180;				 // rotation
	 					paramAffichageZE[codeZE][3]=-10;				 // pos X
	 					paramAffichageZE[codeZE][4]=50;       // pos Y
	 					orientationZE[codeZE]='top';
 					}
 					else if (i <= NB_ZE_Largeur+NB_ZE_Hauteur) {
 						paramAffichageZE[codeZE][0]=40;
	 					paramAffichageZE[codeZE][1]=TailleZEenhauteur;
	 					paramAffichageZE[codeZE][2]=270;
	 					paramAffichageZE[codeZE][3]=-10;
	 					paramAffichageZE[codeZE][4]=50;
	 					orientationZE[codeZE]='right';
 					}
 					else if (i <= 2* NB_ZE_Largeur+NB_ZE_Hauteur) {
 						paramAffichageZE[codeZE][0]=TailleZEenlargeur;
	 					paramAffichageZE[codeZE][1]=40;
	 					paramAffichageZE[codeZE][2]=0;
	 					paramAffichageZE[codeZE][3]=-10;
	 					paramAffichageZE[codeZE][4]=50;
	 					orientationZE[codeZE]='down';
 					}
 					else  {
 						paramAffichageZE[codeZE][0]=40;
	 					paramAffichageZE[codeZE][1]=TailleZEenhauteur;
	 					paramAffichageZE[codeZE][2]=90;
	 					paramAffichageZE[codeZE][3]=-10;
	 					paramAffichageZE[codeZE][4]=50;
	 					orientationZE[codeZE]='left';
 					}
 					$("<div  id="+codeZE+"  class='zoneEchange' style ='position:relative ; top: "+paramAffichageZE[codeZE][3]+" ; right: "+paramAffichageZE[codeZE][4]+" ; width:"+paramAffichageZE[codeZE][0] +" ; height :"+paramAffichageZE[codeZE][1] +"'  > </div>").appendTo("#ZP");
				}
			});
    		console.log('PAGE : workspace.js -> creation de div ZE nb='+ZEmax);
    		
    		
    		
    		
   		 });
   
		socket.on('EVT_ReponseNOKConnexionZA',function(ZC) {
    		myZC = ZC;
    		alert('Zone collaborative active : '+ myZC.idZC+'\n\nImpossible d\'acceder a l\'Espace de Partage :'+myZC.ZP[rang].idZP+'\n\n');
    		console.log('PAGE : workspace.js -> reception evenement [EVT_ReponseNOKConnexionZA] pour ZP= '+myZC.ZP[rang].idZP);
    	});
    	
    	/* ----------------------------- */
    	/* ----- connection d'une ZE ----*/
    	/* ----------------------------- */


	    socket.on('EVT_NewZEinZP', function(pseudo, idZE ,idZEP, posAvatar)
  			{
    		alert('Creation d une ZE ='+idZE+' \n ZEP associee = '+idZEP+'\n Pour pseudo='+pseudo);
    		
    		$(function () {
        		
        		$("#"+idZE+"").slideDown(1000);

        	// $("<div  id="+idZE+"  class='zoneEchange' > <img id =avatar"+idZE+" ></img> </div>").appendTo("#ZP"); //Creation de la zone

			//$("#"+idZE+"").draggable({ drag: function (event, ui) {if($(this).find('div.artefact').length !=0){$this.draggable('option', 'disabled', true)}}  })
			//$("#"+idZE+"").click(function() { $(this).toggleClass('rotated')})
			/*
				$("#"+idZE+"").click(function() {
				var angle = ($(this).data('angle')+90)||90;
				$(this).css({'transform': 'rotate('+ angle +'deg)'});
				$(this).data('angle', angle);

			})*/
        	/*interact("#"+idZE+"")
       	 
        	  .resizable({
        	    preserveAspectRatio: false,
        	    edges: { left: true, right: true, bottom: true, top: true }
        	  })
        	  .on('resizemove', function (event) {
        	    var target = event.target,
        	        x = (parseFloat(target.getAttribute('data-x')) || 0),
        	        y = (parseFloat(target.getAttribute('data-y')) || 0);

        	    // update the element's style
        	    target.style.width  = event.rect.width + 'px';
        	    target.style.height = event.rect.height + 'px';

        	    // translate when resizing from top or left edges
        	    x += event.deltaRect.left;
        	    y += event.deltaRect.top;

        	    target.style.webkitTransform = target.style.transform =
        	        'translate(' + x + 'px,' + y + 'px)';

        	    target.setAttribute('data-x', x);
        	    target.setAttribute('data-y', y);
        	  });*/
    	})
  		}	)
    	
    	/* ------------------------------------------ */
    	/* ----- arrive d'un Artifact dans une ZE ----*/
    	/* ------------------------------------------ */
    	
    	socket.on('EVT_ReceptionArtefactIntoZE',function(pseudo,idZE,chaineJSON)

    	{ 
    		console.log('PAGE : workspace.ejs -> reception evenement [EVT_ReceptionArtefactIntoZE] pour ZE= '+idZE);

 
    		art=JSON.parse(chaineJSON)

    		if (art.typeArtefact == "image") {
           		art.contenu=(art.contenu).replace(/(\r\n|\n|\r)/gm, ""); //supprimer les caract�re sp�ciaux

    	
             	var target = $("<div id="+art.idAr+" class='draggable artefact img dropped-image' style='background-image: url(data:image/png;base64,"+art.contenu+")'> </div>");
    		}
    		
    		
    		else {
           		art.contenu=(art.contenu).replace(/(\r\n|\n|\r)/gm, "</br>"); //pour le saut de ligne

	    		  var target = $("<div id="+art.idAr+" class='draggable artefact dropped-msg left'>  <h1> "+art.titre+" </h1> <p style ='display : none'> "+art.contenu+" </p> </div>")

    		}

   		 target.appendTo("#"+idZE+""); 

    	})
    	
    	/* ------------------------------------------------ */
    	/* ----- arrive d'un Artifact directement en ZP ----*/
    	/* ------------------------------------------------ */

		socket.on('EVT_ReceptionArtefactIntoZP', function (pseudo,idZP,chaineJSON)
		{

    		console.log('PAGE : workspace.ejs -> reception evenement [EVT_ReceptionArtefactIntoZP] pour ZP= '+idZP);

			art=JSON.parse(chaineJSON)

   			if (art.typeArtefact == "image") 
   			{
    			art.contenu=(art.contenu).replace(/(\r\n|\n|\r)/gm, ""); 
    			var target = $("<div id="+art.idAr+" class='draggable artefact img' style='left:50%; top:50%; position: relative; background-image: url(data:image/png;base64,"+art.contenu+")'> </div>");
   			}
   			else {

       			art.contenu=(art.contenu).replace(/(\r\n|\n|\r)/gm, "</br>"); 
	   			var target = $("<div id="+art.idAr+" class='draggable artefact' style='left:50%; top:50% ;position: relative;'>  <h1> "+art.titre+" </h1> <p> "+art.contenu+" </p> </div>");
   			}
		 	target.appendTo("#ZP"); 
		})
 
    

//////////////////////////////////////////////////////////////////////////////////////////////
socket.on('EVT_Deconnexion', function (pseudo, idZE) {
//alert("Deconnection")
//alert(idZE)
//$("#test0").fadeIn();
//if($("#"+idZE+"").find('div.artefact').length !=0) { alert("deconnexion interdit")} 
 $("#"+idZE+"").fadeOut() ; 

	//var cnt = $("#"+idZE+"").contents();
	//$("#"+idZE+"").replaceWith(cnt);
	
	//var myarr=[];
	$(function() {
		$("#"+idZE+"").children("div","img").each (function ()
				
				{
			//myarr[myarr.length]=$(this).attr('id')
			var className =$(this).attr('class');
			var idAr =  $(this).attr('id');
			//$("#"+idZE+"").find("div[id="+idAr+"]");
	var position = $(this).position()
	function getRotationDegrees(obj) { //stocker l'angle de la rotation
var matrix = obj.css("-webkit-transform") ||
obj.css("-moz-transform")    ||
obj.css("-ms-transform")     ||
obj.css("-o-transform")      ||
obj.css("transform");
if(matrix !== 'none') {
    var values = matrix.split('(')[1].split(')')[0].split(',');
    var a = values[0];
    var b = values[1];
    var angle = Math.round(Math.atan2(b, a) * (180/Math.PI));
} else { var angle = 0; }
return angle;
}

angle1= getRotationDegrees($(this));
alert(angle1)

if (className == "draggable artefact"){ 
	
	//art.contenu=(art.contenu).replace(/(\r\n|\n|\r)/gm, "</br>"); 
	var titre= $(this).find("h1").text();
	var message= $(this).find("p").text();
	

	   var target = $("<div id="+idAr+" class='draggable artefact' style='left:"+position.left+"; top:"+position.top+" ;position: absolute; transform: rotate("+angle1+"deg)'>  <h1> "+titre+" </h1> <p> "+message+" </p> </div>");
}

//if (className == "draggable artefact img "/*(art.typeArtefact == "image")*/)
else {
	//art.contenu=(art.contenu).replace(/(\r\n|\n|\r)/gm, ""); 
	//var cnt= $(this).text();
	var bg = $(this).css('background-image'); //l'image
	bg=bg.replace('url(','').replace(')','');
	var target = $("<div id="+idAr+" class='draggable artefact img' style='left:"+position.left+"; top:"+position.top+" position: absolute; transform: rotate("+angle1+"deg)'> </div>").css("background-image", "url("+bg+")");
}//alert($(this).attr('id'))
target.appendTo("#ZP"); 

	});
		});
	
	
//	$("#"+idZE+"").replaceWith(function () { return $('.artefact', this); }) //suppression de la zone

	
	//var ID = $("#"+idZE+"").children("div").attr("id");
	//alert(ID)
		//var target = $("#"+idZE+"").children("div");

	 //var target = $("<div id="+art.idAr+" class='draggable artefact' style='left:50%; top:50%'>  <h1> "+art.titre+" </h1> <p> "+art.contenu+" </p> </div>")
	   
	
		// target.appendTo("#ZP"); 
})

//////////////////////////////////////////////////////////////////////////////////////////////
 socket.on ('EVT_ArtefactDeletedFromZE', function (idAr, idZE, idZEP)
		 {
	 //art=JSON.parse(chaineJSON)
	//alert(idAr+ " from " +idZE);
	 //var idAr= art.idAr;
	// $("#"+idAr+"").remove();
	$("#"+idZE+"").find("div[id="+idAr+"]").remove();

	//var target = ("#"+idAr+"");
	//$(target).remove();
	
		 })
		 
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
</script>
	    


  
  
  
</html>